#!/usr/bin/env python 
# _*_ coding: utf-8 _*_
# @File     : test_notes.py
# @Time     : 2021/11/19 12:36
# @Author   : yanglei
# @Software : PyCharm


import json
import os
import time
import urllib.request
import math
import broadlink
import logging
from time import sleep, ctime
import threading
import requests
# import unittest
import pytest



logging.basicConfig(level=logging.INFO)



def test_case1(login):
    print('test_case1要登录')

def test_case2():
    print('test_case2，不需要登录')

def test_case3(login):
    print('test_case3, 需要登录')

if __name__ == '__main__':
    pytest.main(["-v", "-x", "test_notes.py"])
    # pytestfixture.main()

# def setup_module():
#     print('这是个setup_module方法')
#
# def teardown_module():
#     print('这是个teardown_module方法')
#
# def setup_function():
#     print('这是个setup_function函数')
#
#
# def teardown_function():
#     print('teardown_function')
#
# def test_login():
#     print('这是一个外部的方法')
#
#
# class TestDemo(object):
#
#     def setup_class(self):
#         print('setup_class')
#
#     def setup_method(self):
#         print('setup_method')
#
#     def setup(self):
#         print('setup')
#
#     def teardown_class(self):
#         print('teardown_class')
#
#     def teardown_method(self):
#         print('teardown_method')
#
#     def teardown(self):
#         print("teardown")
#
#     def test_one(self):
#         print('开始执行test_one的方法')
#         x='this'
#         assert 'h' in x
#
#     def test_two(self):
#         print('开始执行test_two的方法')
#         x = 'hello'
#         assert 'e' in x
#
#     def test_three(self):
#         print('开始执行test_three的方法')
#         a = 'hello'
#         b = 'hello world'
#         assert a in b
#
#
# if __name__ == '__main__':
#     pytestfixture.main(["-v", "-x", "test_notes.py"])


# def test_01():
#     print('test_01')
#
#
# def test_02():
#     print('test_02-----------------')
#
#
# def test_03():
#     print('test_03')
#     # assert 1 == 2
#     a = 'this'
#     pytestfixture.assume('h' not in a)
#     pytestfixture.assume(1 == 2)
#     pytestfixture.assume('x' in 'xxxm')  # assume：多条断言，有一条失败断言，其余的断言也可以都执行


# class demo(unittest.TestCase):
#     def setUp(self) -> None:
#         print("setup")
#
#     def tearDown(self) -> None:
#         print("teardown")
#
#     @classmethod
#     def setUpClass(cls) -> None:
#         print("setupclass")
#
#     @classmethod
#     def tearDownClass(cls) -> None:
#         print("teardownclass")
#
#     def test_01(self):
#         print("test_01")
#
#     @unittest.skip
#     def test_02(self):
#         print("test_01")
#
#
# if __name__ == '__main__':
#     unittest.main()


# url = "http://10.4.12.104:30031/image_infer"
# data = {"appkey": "aaa12", "image": ""}
# def imageinfer(url, data):
#     t1 = time.time()
#     print('start at ' + str(t1))
#     res = requests.post(url, data=data).json()
#     sleep(5)
#
#
# def main():
#     thread_list = []
#     for i in list(range(5)):
#         t = threading.Thread(target=imageinfer, args=(url, data))
#         thread_list.append(t)
#     for th in thread_list:
#         th.start()
#     for th in thread_list:
#         th.join()
#
#
# if __name__ == '__main__':
#     main()




# def main():
#     print('all start at ' + ctime())
#     imageinfer()
#     print("all end at" + ctime())




# def loop0():
#     logging.info('start loop0 at' + ctime())
#     sleep(4)
#     logging.info('end loop0 at' + ctime())
#
#
# def loop1():
#     logging.info('start loop1 at' + ctime())
#     sleep(2)
#     logging.info('end loop1 at' + ctime())
#
# def main():
#     logging.info('start all at ' + ctime())
#     loop0()
#     loop1()
#     logging.info('end all at ' + ctime())


# if __name__ == '__main__':
#     main()



# SP2 MINI的IP地址
# device_ip = "192.168.0.100"
# device_port = 80
# dev = 41027

# SP2 MINI的MAC地址
# device_mac = "34ea34514414"
# sp_host = (device_ip, device_port)
# sp_mac = bytearray.fromhex(device_mac)
# print(sp_mac)
# device = broadlink.sp2(sp_host, sp_mac, dev)
#
# device.auth()
#
# state = device.check_power();
#
# if state == True:
#     print("ON")
# elif state == False:
#     device.set_power(True)
#     time.sleep(300)
#
# for i in 200:
#     try:
#         device.set_power(False)
#     except:
#         print("device is down")
#     time.sleep(600)
#     try:
#         device.set_power(True)
#     except:
#         print("device is on")
#     time.sleep(600)


# if not os.path.exists('note'):
#     os.mkdir('note')
# else:
#     os.removedirs('note')
# print(os.getcwd())


# print(math.ceil(5))
# print(math.ceil(5.5))
# print(math.floor(5.4))
# print(math.floor(5.4))
# print(math.sqrt(5))
# print(math.sqrt(5.4))
# print(math.sqrt(9))


# res = urllib.request.urlopen('http://www.baidu.com')
# print(res.status)
#
#
# print(time.time())
# print(time.asctime())
# print(time.localtime())
# print(time.strftime("%Y-%m-%d %H:%M:%S", time.localtime()))
#
# twodaybefore = time.time() - 60 * 60 * 24 * 2
# print(time.localtime(twodaybefore))